name: CD Promote test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  lambda:
    runs-on: ubuntu-latest
    steps:
    - name: CD Lambda(s) Configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.VBR_AWS_ACCESS_KEY_ID_TST }}
        aws-secret-access-key: ${{ secrets.VBR_AWS_SECRET_ACCESS_KEY_TST }}
        aws-region: ${{ secrets.VBR_AWS_REGION_PRD }}
    - name: Prepare Lambda(s)
      shell: bash
      run: |
        echo aws s3 cp s3://s3-vbr-test-basisregisters-lam-sr-sqsbackofficehandlerfunction/$VERSION/lambda.zip s3://s3-vbr-test-basisregisters-lam-sr-sqsbackofficehandlerfunction/lambda.zip --copy-props none
        aws s3 cp s3://s3-vbr-test-basisregisters-lam-sr-sqsbackofficehandlerfunction/$VERSION/lambda.zip s3://s3-vbr-test-basisregisters-lam-sr-sqsbackofficehandlerfunction/lambda.zip --copy-props none
      env:
        VERSION: ${{ github.event.inputs.version }}
    - name: Promote Lambda(s)
      shell: bash
      run: |
        docker pull ghcr.io/okigan/awscurl
        docker run --rm okigan/awscurl --access_key $ACCESS_KEY_ID --secret_key $SECRET_ACCESS_KEY_ID --region $REGION -X POST -d '{ \"functionName\": \"sr-sqsbackofficehandlerfunction\", \"project\": \"vbr\", \"domain\": \"basisregisters\"}' $PROMOTEURL/test
      env:
        ACCESS_KEY_ID: ${{ secrets.VBR_AWS_ACCESS_KEY_ID_TST }}
        SECRET_ACCESS_KEY_ID: ${{ secrets.VBR_AWS_SECRET_ACCESS_KEY_TST }}
        REGION: ${{ secrets.VBR_AWS_REGION_PRD }}
        PROMOTEURL: ${{ secrets.VBR_AWS_PROMOTE_LAMBDA_BASEURL }}

